This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-12-16T03:20:35.186Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
.gitignore
package.json
public/images/cta-logo-one.svg
public/images/home-icon.svg
public/images/logo.svg
public/images/movie-icon.svg
public/images/original-icon.svg
public/images/search-icon.svg
public/images/series-icon.svg
public/images/watchlist-icon.svg
public/index.html
public/manifest.json
public/robots.txt
README.md
requirements.txt
src/App.js
src/app/store.js
src/components/Detail.js
src/components/DisneyOriginal.js
src/components/Header.js
src/components/Home.js
src/components/ImageSlider.js
src/components/Login.js
src/components/NewRelease.js
src/components/Rec.js
src/components/Search.js
src/components/Trending.js
src/components/Viewers.js
src/config.js
src/features/user/userSlice.js
src/firebase.js
src/index.css
src/index.js

================================================================
Repository Files
================================================================

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

# config files with sensitive data
src/config.js         # If config.js is in src folder

================
File: package.json
================
{
  "name": "disney-clone",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@reduxjs/toolkit": "^2.3.0",
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "firebase": "^11.0.2",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-redux": "^9.1.2",
    "react-router-dom": "^6.28.0",
    "react-scripts": "5.0.1",
    "react-slick": "^0.30.2",
    "slick-carousel": "^1.8.1",
    "styled-components": "^6.1.13",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

================
File: public/images/cta-logo-one.svg
================
<?xml version="1.0" encoding="utf-8"?>
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 276 64"><defs><radialGradient id="radial-gradient" cx="-160.71" cy="416.47" r="2.71" gradientTransform="matrix(31.48, 0, 0, -31.48, 5234.3, 13141.86)" gradientUnits="userSpaceOnUse"><stop offset="0.06" stop-color="#fff"/><stop offset="0.08" stop-color="#cbffff"/><stop offset="0.1" stop-color="#96ffff"/><stop offset="0.12" stop-color="#68ffff"/><stop offset="0.14" stop-color="#43ffff"/><stop offset="0.17" stop-color="#25ffff"/><stop offset="0.19" stop-color="#1ff"/><stop offset="0.21" stop-color="#04ffff"/><stop offset="0.23" stop-color="aqua"/><stop offset="1" stop-color="blue" stop-opacity="0"/></radialGradient></defs><path d="M185.83,42.65v1.49a.58.58,0,0,1-.58.58h-7.07c0,.37,0,.69,0,1a54.3,54.3,0,0,1-.3,6,.59.59,0,0,1-.58.53h-1.53a.55.55,0,0,1-.54-.56v0a50.87,50.87,0,0,0,.31-5.91c0-.31,0-.64,0-1h-7a.58.58,0,0,1-.58-.58V42.65a.57.57,0,0,1,.57-.58h6.9a51.6,51.6,0,0,0-.92-7.11.49.49,0,0,1,.38-.57h1.76a.53.53,0,0,1,.52.44,55,55,0,0,1,.9,7.25h7.17A.58.58,0,0,1,185.83,42.65Z" fill="#fff" fill-rule="evenodd"/><path d="M92.12,23.11h0Zm-.47.05a1.62,1.62,0,0,1-.53-.11,1.23,1.23,0,0,0,.55.13h.14Zm0,0a1.62,1.62,0,0,1-.53-.11,1.23,1.23,0,0,0,.55.13h.14Z" fill="none"/><path d="M176.21,30.88a49.37,49.37,0,0,0-86.79-8.76.58.58,0,0,0-.07.51.6.6,0,0,0,.36.37l1.29.43a.72.72,0,0,0,.82-.28,46.76,46.76,0,0,1,81.74,8.05.68.68,0,0,0,.62.42h1.53a.54.54,0,0,0,.54-.54.71.71,0,0,0,0-.2Zm-85-7.81a.22.22,0,0,1-.11,0l.1,0h0Z" fill="url(#radial-gradient)"/><path d="M108.08,33.08s.37-.55.68-1a17.71,17.71,0,0,1,2.34-2.48l.51-.42s-.43,0-.67.09a5.16,5.16,0,0,0-1.86,1c-.7.6-1.47,1.58-1.12,2.45l.12.29Zm3.9,1.05a7.59,7.59,0,0,0,3.12-.93c1-.53,2.35-1.57,2.2-2.78a1,1,0,0,0-.63-.83,1.46,1.46,0,0,0-1.18,0,3.55,3.55,0,0,0-.94.4,14.28,14.28,0,0,0-3.47,3.06c-.19.25-.39.54-.54.73s-.17.23-.16.26a4.9,4.9,0,0,0,1.6.08Zm-2.82,2.06a6.38,6.38,0,0,0-.36.63,1.14,1.14,0,0,1-.27.31.58.58,0,0,1-.82,0,2,2,0,0,1-.63-1.4,3.75,3.75,0,0,0,0-.67,4.18,4.18,0,0,0-.57-1,3.85,3.85,0,0,1-.39-1.41,4.68,4.68,0,0,1,1.48-3.38,9.63,9.63,0,0,1,3.28-2.24,6.41,6.41,0,0,1,4.21-.39,3.13,3.13,0,0,1,1.31.89,1.12,1.12,0,0,0,.18.2,1.3,1.3,0,0,0,.33.07,3.26,3.26,0,0,1,1.26.6,2.43,2.43,0,0,1,.88,1.41,3.87,3.87,0,0,1-1.21,3.26,11.92,11.92,0,0,1-4.32,3,7.09,7.09,0,0,1-2.75.49c-.26,0-.53-.09-.79-.11a4,4,0,0,1-.66-.17c-.06-.05-.13-.09-.16-.07Zm1.51,2.62a.66.66,0,0,1,.2.06,1.75,1.75,0,0,1,1,1.38A42,42,0,0,1,112.4,46c0,.91.06,1.8.1,2.7a10.83,10.83,0,0,1-.07,2.49,1.16,1.16,0,0,1-.47.71,2.2,2.2,0,0,1-1.28.12c-.87-.18-1.15-.74-1.28-1.6a43.82,43.82,0,0,1,0-7.78A17.34,17.34,0,0,1,110,39.5c.1-.26.31-.77.69-.69ZM83.86,41.89s-1.28.09-2.17.19a24.36,24.36,0,0,0-4.47.92c-.36.14-1.11.44-1.18.82a1.31,1.31,0,0,0,.45,1c.16.19,1,1,1.29,1.25a22.37,22.37,0,0,0,4.69,2.85c.53.22,1.41.53,1.41.53s-.06-2.5,0-5c0-1.31,0-2.6,0-2.6Zm23.62,1a11.21,11.21,0,0,1-.13,2.12,9.47,9.47,0,0,1-.4,1.38,16,16,0,0,1-.71,1.44,12.05,12.05,0,0,1-2,2.48,17,17,0,0,1-8.59,3.37,21.86,21.86,0,0,1-6.41-.19l-1.81-.38a7.11,7.11,0,0,1,0,.74,2.74,2.74,0,0,1-.18.62,1,1,0,0,1-.77.55A2.36,2.36,0,0,1,85.1,55a1.89,1.89,0,0,1-1-1.64c-.1-.58-.2-1.59-.2-1.59L83,51.28a23.91,23.91,0,0,1-3.59-2.19c-.63-.5-1.25-1-1.85-1.56a10.24,10.24,0,0,1-2-2.45,2.36,2.36,0,0,1-.22-2.2c.44-1.1,2-1.93,3.11-2.4a25.69,25.69,0,0,1,4.29-1.31c.48-.07,1.23-.2,1.28-.23l0,0s.06-1.13,0-1.52.29-3,.39-3.52a6.38,6.38,0,0,1,.5-1.73.46.46,0,0,1,.63-.05c1.17.73,1.53,3.27,1.62,4.56,0,.78.08,2,.08,2s1.35,0,2.18,0a21.27,21.27,0,0,1,2.53.27,17.7,17.7,0,0,1,4.37,1.25,4.47,4.47,0,0,1,2.21,2.23,2.3,2.3,0,0,1-.19,2.12A3,3,0,0,1,96.06,46a3.73,3.73,0,0,1-1.61-.37.27.27,0,0,1,0-.39h0s.51-.29.79-.44a1.64,1.64,0,0,0,.37-.26c.24-.21.45-.44.43-.7s-.4-.55-.75-.69a27.74,27.74,0,0,0-6.49-1.29l-1.5-.06.19,8.72,1.3.23c.32.05,1.72.17,2.09.18a19.2,19.2,0,0,0,8.55-1.4,8.94,8.94,0,0,0,3-2.1,6.1,6.1,0,0,0,1.44-4.52,11.76,11.76,0,0,0-2.52-5.41c-2.76-3.55-7.5-6.48-11.66-8.19a37.21,37.21,0,0,0-13-2.92,22,22,0,0,0-5,.37l-.54.15a1.42,1.42,0,0,0-.4.17l-.06.06a.74.74,0,0,0,.15.08c.14.06.71.09,1,.15a1,1,0,0,1,.65.38.38.38,0,0,1,0,.48c-.3.36-1.38.3-1.87.22s-1.12-.23-1.24-.67a2,2,0,0,1,.37-1.48,3.61,3.61,0,0,1,2.4-1.72,24.69,24.69,0,0,1,5.06-.79A29.43,29.43,0,0,1,87,25.21a46.27,46.27,0,0,1,6.11,2.38,47.41,47.41,0,0,1,4.46,2.49c.36.23,2.46,1.77,2.79,2.05.68.55,1.57,1.35,2.21,2a21.14,21.14,0,0,1,3.55,4.63c.18.36.32.71.55,1.13a9.34,9.34,0,0,1,.48,1.24c.06.25.14.61.15.62a6.14,6.14,0,0,1,.17,1.15Zm14.52.63.14,0a11.12,11.12,0,0,1,2.82.67,2.92,2.92,0,0,1,1.52,1.44,4.07,4.07,0,0,1-2,5.7A7.61,7.61,0,0,1,122,52a9.14,9.14,0,0,1-4.83-.86,5.72,5.72,0,0,1-2.45-2.09,2,2,0,0,1,.1-2.22c.75-1,2.38-1.27,3.6-1.23a15.32,15.32,0,0,1,3.5.64,6.32,6.32,0,0,1,1.31.61.42.42,0,0,1,.14.42c-.2.62-1.71.95-2.14,1-1.16.18-1.77-.26-3.09-.78a4.35,4.35,0,0,0-1.11-.3c-.6-.06-1.32.11-1.44.76,0,.34.34.66.64.79a4.74,4.74,0,0,0,2,.42,10.29,10.29,0,0,0,6.07-1.5.92.92,0,0,0,.46-.71s0-.36-.16-.4h0s-.1-.12-.16-.18a2.58,2.58,0,0,0-.71-.4,17.17,17.17,0,0,0-4.31-.8c-1.14-.1-2.93-.24-3.35-.31a4.92,4.92,0,0,1-1.31-.32,1.63,1.63,0,0,1-.88-1,3.14,3.14,0,0,1,.49-2.35c1.13-1.62,3.77-2.23,5.74-2.48s5-.24,6.87.76c.29.15.44.3.38.61a1.53,1.53,0,0,1-1.09,1.12,12.45,12.45,0,0,1-2.21.27,36.86,36.86,0,0,0-7.15.65,1.63,1.63,0,0,0-.55.23c-.34.37.63.47.83.52l.14,0,4.76.56ZM129.05,52c-.91-.33-1.12-1.8-1.16-2.55a23.35,23.35,0,0,1,1.31-8.07c.23-.65.57-1.71,1.29-1.65a1.65,1.65,0,0,1,1.14.83c.77,1.09,1.53,2.2,2.28,3.32s1.36,2.14,2,3.11a1.26,1.26,0,0,0,.25.31c.12.1.23.1.27,0a14.28,14.28,0,0,0,0-1.51c-.05-.39-.07-.7-.12-1a30.43,30.43,0,0,0-.67-3.29c-.28-1-.61-2.13-.85-3.14a4.08,4.08,0,0,1-.15-1,.51.51,0,0,1,.76-.53c.93.33,2.16,2.35,2.52,3,.12.23.6,1.43.72,1.77a14.9,14.9,0,0,1,.72,3.51,9.76,9.76,0,0,1-.5,4.2,4.54,4.54,0,0,1-.91,1.34,2.1,2.1,0,0,1-2.22.45,11.6,11.6,0,0,1-2.23-3c-.73-1.27-2-3.76-2.17-4a.43.43,0,0,0-.2-.15c-.07,0-.1.13-.12.23-.13.73-.21,4.11-.21,4.21a16.89,16.89,0,0,1-.22,2.65c-.1.45-.21.82-.63,1a1,1,0,0,1-.87-.06Zm12.58-.44a4.17,4.17,0,0,1-.37-.36,6.68,6.68,0,0,1-.41-.67c-.06-.13-.1-.22-.14-.33a4.11,4.11,0,0,1-.13-2.36,11.3,11.3,0,0,1,.69-1.87.48.48,0,0,0,0-.17c0-.15-.22-1.12-.23-1.44,0-.48.35-.82,1-.88l.13,0c.25-.06.42-.54.55-.92l.48-1.35c-.41-.1-.81-.21-1.21-.34a1.76,1.76,0,0,1-1-.84c-.25-.51-.08-.79.45-.95.19-.07,1.72-.36,2.2-.43l1.75-.23c.5-.06,2.78-.33,3.51-.31a2.87,2.87,0,0,1,2.48,1.43c.35.5.59,1.1.06,1.42-.81.49-3.43.53-3.91.53H145.7l-.53,1.79,2.93,0a3.49,3.49,0,0,1,.65.05c.54.12.73.53.75,1.13s-.1,1-.66,1.1c-.28.05-3.51.07-4,.12l-.56.07s-.23.61-.43,1.23-.38,1.29-.38,1.29h.3a3.38,3.38,0,0,0,.63-.07c1-.17,2.45-.39,3.65-.58.65-.1,1-.15,1.31.28a1.79,1.79,0,0,1,.47,1.15c0,.43-.31.71-.71,1a12,12,0,0,1-5,2.2,3.35,3.35,0,0,1-1.59-.17,3,3,0,0,1-.57-.27s-.24-.14-.33-.21ZM162,42.79a17.72,17.72,0,0,0-2.41,2.85c-.69,1-1.33,2.1-2,3a10.36,10.36,0,0,0-.52.92,2.07,2.07,0,0,0,.84,0,7.19,7.19,0,0,0,2.71-1.26,5.78,5.78,0,0,0,2-3.1,3.33,3.33,0,0,0-.19-2.28.32.32,0,0,0-.44-.05Zm-6.6,10s-.26.77-.45,1.38c-.34,1-1.07,3.86-1.25,4.73-.25,1.3-1,4.71-1,4.78a.45.45,0,0,1-.2.21c-.3.17-.42.11-.79-.08a3.55,3.55,0,0,1-1.24-1c-.71-.92-.54-2.66-.4-3.68a32,32,0,0,1,2.34-8.67.15.15,0,0,0,0-.13,6.91,6.91,0,0,1-.65-2.86c0-2.78,1.6-5.52,3.39-7.73.13-.17,1-1.22,1.41-1.2s.47.49.41.88a11.88,11.88,0,0,1-1.73,3.67,11,11,0,0,0-1.18,2.82,7.87,7.87,0,0,0-.19,1.08c0,.3.08.68.08.68s1.13-1.59,1.88-2.56c.4-.53.7-.89,1-1.27.66-.73,1.35-1.44,2-2.13a7.59,7.59,0,0,1,2-1.53,1.77,1.77,0,0,1,2,0,4.58,4.58,0,0,1,1.64,3.37,8.15,8.15,0,0,1-.78,4.26,8.8,8.8,0,0,1-3.16,3.42,8.52,8.52,0,0,1-4.72,1.55l-.48,0Z" fill="#fff"/><path d="M247,42.33s-.06.54-.15,1.14a2.42,2.42,0,0,1-2.72,2.05h-5.85l-.66,5.23h-4.66L234,42.33Zm-27.49,0h10.24c1.46,0,3.32.63,2.95,3.27a20.58,20.58,0,0,1-.55,3.21c-.78,1.86-3.1,1.92-3.43,1.94H218.41l.46-3.65h9.07l.2-1.58h-6.31C220.25,45.52,219.13,44.53,219.47,42.33Zm-.94,0-.4,3.19h-7.81l-.2,1.58h7.81l-.47,3.65H205l1.07-8.42Zm29.38,0h4.66l-1.06,8.42h-4.67l1.07-8.42Zm8.85,0h4.66l-1.06,8.42H255.7l1.06-8.42Zm-50-5.33h12.47l-.49,3.86H206.25l.49-3.86Zm37.4,0c2.6,0,3.3,1.49,3.09,3.14,0,.29-.08.63-.09.71H219.66s.07-.53.14-1.13c.19-1.58,1.5-2.65,3.49-2.72h20.85Zm14.6,0c1.61,0,3.28.74,2.95,3.27-.06.45-.07.59-.07.59H248.09l.49-3.86Z" fill="#fff" fill-rule="evenodd"/><path d="M272.2,42.14l.44-3.43h-3.71l-.43,3.43H265l-.42,3.41h3.48L267.64,49h3.7l.45-3.49h3.49l.43-3.41Z" fill="#f9b300" fill-rule="evenodd"/><path d="M0,34H49.19V51.22H0Z" fill="none"/><path d="M30.15,51.22h3.91V34H30.14V51.22Zm-6.89-4.91a1.08,1.08,0,0,1-1,1.11H19.94a1.09,1.09,0,0,1-1.05-1.11V39.37H15v7.28c0,3,1.8,4.55,4.44,4.55h3.83c2.44,0,3.92-1.87,3.92-4.55V39.37H23.24S23.26,46.09,23.26,46.31Zm22-6.94v6.94a1.09,1.09,0,0,1-1,1.11H42a1.09,1.09,0,0,1-1-1.11V39.37H37v7.28c0,3,1.8,4.55,4.45,4.55h3.82c2.44,0,3.92-1.87,3.92-4.55V39.37Zm-37.55,0H5.24a2.91,2.91,0,0,0-1.32.24V34H0V51.2H3.9V44.28a1.09,1.09,0,0,1,1-1.11H7.22a1.09,1.09,0,0,1,1,1.11v6.94h3.92v-7.5c0-3.14-2-4.35-4.44-4.35Z" fill="#1ce783"/></svg>

================
File: public/images/home-icon.svg
================
<svg alt="" aria-hidden="true" aria-label="home" color="#fff" role="img" version="1.1" viewBox="0 0 36 36" xmlns="http://www.w3.org/2000/svg" data-route="HOME" style="color: white; fill: white;"><path d="M26.882 19.414v10.454h-5.974v-5.227h-5.974v5.227H8.961V19.414H5.227L17.921 6.72l12.694 12.694h-3.733z" class="sc-kAzzGY dGwULW"></path></svg>

================
File: public/images/logo.svg
================
<?xml version="1.0" encoding="utf-8"?><svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1044.9 568.7"><defs><radialGradient id="radial-gradient" cx="944.52" cy="281.8" r="760.12" gradientTransform="matrix(1, 0, 0, -1, 0, 563.4)" gradientUnits="userSpaceOnUse"><stop offset="0.01" stop-color="#fff"/><stop offset="0.03" stop-color="#cbffff"/><stop offset="0.06" stop-color="#96ffff"/><stop offset="0.08" stop-color="#68ffff"/><stop offset="0.11" stop-color="#43ffff"/><stop offset="0.14" stop-color="#25ffff"/><stop offset="0.16" stop-color="#1ff"/><stop offset="0.19" stop-color="#04ffff"/><stop offset="0.22" stop-color="aqua"/><stop offset="1" stop-color="blue" stop-opacity="0"/></radialGradient></defs><title>Disney+ Brand Logo</title><path d="M737.8,367.4c-14.4,3.3-52.3,5.2-52.3,5.2l-4.8,15s18.9-1.6,32.7-.2c0,0,4.5-.5,5,5.1a86.46,86.46,0,0,1-.4,10.8s-.3,3.4-5.1,4.2c-5.2.9-40.8,2.2-40.8,2.2l-5.8,19.5s-2.1,4.5,2.7,3.2c4.5-1.2,41.8-8.2,46.7-7.2,5.2,1.3,11,8.2,9.3,14.6-2,7.8-39.2,31.6-61.9,29.9,0,0-11.9.8-22-15.3-9.4-15.3,3.6-44.4,3.6-44.4s-5.9-13.6-1.6-18.1c0,0,2.6-2.3,10-2.9l9.1-18.9s-10.4.7-16.6-6.9c-5.8-7.3-6.2-10.6-1.8-12.6,4.7-2.3,48-10.2,77.8-9.2,0,0,10.4-1,19.3,17-.1,0,4.3,7.3-3.1,9ZM625.7,440c-3.8,9-13.9,18.6-26.4,12.6s-32.1-46.3-32.1-46.3-7.5-15-8.9-14.7c0,0-1.6-2.9-2.6,13.5s.2,48.3-6.3,53.3c-6.2,5-13.7,3-17.6-2.9-3.5-5.8-5-19.6-3.1-43.8,2.3-24.2,7.9-50,15.1-58.1s13-2.2,15.2-.1c0,0,9.6,8.7,25.5,34.3l2.8,4.7s14.4,24.2,15.9,24.1c0,0,1.2,1.1,2.2.3,1.5-.4.9-8.2.9-8.2s-3-26.3-16.1-70.9c0,0-2-5.6-.6-10.8s6.6-2.8,6.6-2.8,20.4,10.2,30.2,43.4c9.7,33.5,3.1,63.4-.7,72.4ZM525.5,354.7c-1.7,3.4-2.7,8.3-11.3,9.6,0,0-82.3,5.6-86.2,11.4,0,0-2.9,3.4,1.6,4.4s23.1,3.4,32.1,3.9c9.6.1,42,.4,53.6,14.9,0,0,6.9,6.9,6.6,22.5-.3,16-3.1,21.6-9.3,27.4-6.5,5.4-62.3,30.4-98.3-8,0,0-16.6-18.5,5.7-32.5,0,0,16.1-9.7,57,1.7,0,0,12.4,4.5,11.8,9-.7,4.8-10.2,9.9-24,9.6-13.4-.4-23.2-6.8-21.3-5.8,1.8.7-14.4-7.8-19.4-2-5,5.3-3.8,8.6,1.1,11.9,12.5,7.1,60.8,4.6,75.2-11.4,0,0,5.7-6.5-3-11.8-8.7-5-33.6-8-43.3-8.5-9.3-.5-43.9.1-48.9-9.1,0,0-5-6.2.5-23.8,5.8-18.4,46.1-25.5,63.5-27.1,0,0,47.9-1.7,56.7,8.1a7.52,7.52,0,0,1-.4,5.6Zm-136,107.9c-5.8,4.3-18.1,2.4-21.6-2.4-3.5-4.3-4.7-21.4-4-48.2.7-27.1,1.3-60.7,7.1-66,6.2-5.4,10-.7,12.4,3,2.6,3.6,5.7,7.6,6.4,16.1s2.6,53.1,2.6,53.1,2.6,40.2-2.9,44.4ZM402,318.8c-16.9,5.6-28.5,3.7-38.3-.5-4.3,7.5-6.8,9.8-10.1,10.3-4.8.5-9.1-7.2-9.9-9.7-.8-1.9-3.1-5.1-.3-12.7-9.6-8.6-10.3-20.2-8.7-28,2.4-9,18.6-43.2,67.9-47.2,0,0,24.1-1.8,28.2,11.1h.7s23.4.1,22.9,20.9c-.3,20.9-26,46.9-52.4,55.8Zm-46-46.3c-5,8-5.2,12.8-2.9,16.1,5.7-8.7,16.1-22.4,31.4-32.8-11.8,1-21.7,6.1-28.5,16.7Zm68.1-13.4c-15.5,2.3-39.5,23.1-50.9,40.1,17.5,3.2,48.4,2,62.1-25.9-.1,0,6.5-17.3-11.2-14.2ZM844.9,420.2c-9.3,16.2-35.4,50-70.2,42.1-11.5,27.9-21.1,56-26.6,98.2,0,0-1.2,8.2-8,5.3-6.7-2.4-17.9-13.6-20.1-29.1-2.4-20.4,6.7-54.9,25.2-94.4-5.4-8.8-9.1-21.4-5.9-39.3,0,0,4.7-33.2,38-63.2,0,0,4-3.5,6.3-2.4,2.6,1.1,1.4,11.9-.7,17.1s-17,31-17,31-9.3,17.4-6.7,31.1c17.5-26.9,57.3-81.2,82-64.1,8.3,5.9,12.1,18.8,12.1,32.7-.1,12.3-3,25.3-8.4,35Zm-7.2-42.6s-1.4-10.7-11.8,1.1c-9,9.9-25.2,28.6-38.3,53.9,13.7-1.5,26.9-9,30.9-12.8,6.5-5.8,21.6-21.4,19.2-42.2ZM352.2,391.2c-1.9,24.2-11.2,64.9-77.1,85-43.5,13.1-84.6,6.8-107,1.1-.5,8.9-1.5,12.7-2.9,14.2-1.9,1.9-16.1,10.1-23.9-1.5-3.5-5.5-5.3-15.5-6.3-24.4C84.6,442.4,61.4,409,60.5,407.5c-1.1-1.1-12.6-13.1-1.1-27.8,10.8-13.3,46.1-26.6,77.9-32,1.1-27.2,4.3-47.7,8.1-57.1,4.6-10.9,10.4-1.1,15.4,6.3,4.2,5.5,6.7,29.2,6.9,48.1,20.8-1,33.1.5,56.3,4.7,30.2,5.5,50.4,20.9,48.6,38.4-1.3,17.2-17.1,24.3-23.1,24.8-6.3.5-16.1-4-16.1-4-6.7-3.2-.5-6,7.6-9.5,8.8-4.3,6.8-8.7,6.8-8.7-3.3-9.6-42.5-16.3-81.5-16.3-.2,21.5.9,57.2,1.4,78,27.3,5.2,47.7,4.2,47.7,4.2S315,453.8,318,390.2,218.7,265.4,143,246c-75.6-19.8-118.4-6-122.1-4.1-4,2-.3,2.6-.3,2.6a71.47,71.47,0,0,1,11.2,3c7.5,2.4,1.7,6.3,1.7,6.3-12.9,4.1-27.4,1.5-30.2-4.4s1.9-11.2,7.3-18.8c5.4-8,11.3-7.7,11.3-7.7,93.5-32.4,207.4,26.2,207.4,26.2C336,303.2,354.2,366.6,352.2,391.2ZM70,387.9c-10.6,5.2-3.3,12.7-3.3,12.7,19.9,21.4,44.4,34.8,67.7,43.1,2.7-36.9,2.3-49.9,2.6-68.5-36.4,2.5-57.4,8.3-67,12.7Z" fill="#fff"/><path d="M1042.9,380.3v13.2a5.16,5.16,0,0,1-5.2,5.2H974.8c0,3.3.1,6.2.1,8.9a480,480,0,0,1-2.7,53.3,5.19,5.19,0,0,1-5.1,4.7H953.5a4.84,4.84,0,0,1-3.6-1.6,4.75,4.75,0,0,1-1.2-3.8,470.56,470.56,0,0,0,2.8-52.6c0-2.8,0-5.7-.1-8.9H889.2a5.16,5.16,0,0,1-5.2-5.2V380.3a5.16,5.16,0,0,1,5.2-5.2h61.3a460.85,460.85,0,0,0-8.1-63.2,4.6,4.6,0,0,1,.9-3.6,4.22,4.22,0,0,1,3.3-1.6h14.7a4.81,4.81,0,0,1,4.7,3.9,507.25,507.25,0,0,1,8,64.5h63.7A5.29,5.29,0,0,1,1042.9,380.3Z" fill="#fff"/><path d="M202.2,206h-.1m-.7.1c-.3,0-.6-.1-.9-.1a2.77,2.77,0,0,0,.9.1h0Zm0,0c-.3,0-.6-.1-.9-.1a2.77,2.77,0,0,0,.9.1h0Z" fill="none"/><path d="M957.3,275.6a438.92,438.92,0,0,0-771.9-78,5.12,5.12,0,0,0-.6,4.5,4.88,4.88,0,0,0,3.2,3.2l11.4,3.9a7.47,7.47,0,0,0,2,.3,6.59,6.59,0,0,0,5.3-2.8A415.52,415.52,0,0,1,550.6,24.5,416.08,416.08,0,0,1,933.7,278.4a6,6,0,0,0,5.5,3.7h13.6a4.58,4.58,0,0,0,3.9-2.1A4.38,4.38,0,0,0,957.3,275.6ZM201.4,206.1a2.92,2.92,0,0,1-.9-.2,2.92,2.92,0,0,0,.9.2h0Zm735,74.2a4.05,4.05,0,0,0,.9.5C937,280.6,936.7,280.5,936.4,280.3Z" fill="url(#radial-gradient)"/></svg>

================
File: public/images/movie-icon.svg
================
<svg alt="" aria-hidden="true" aria-label="movies" color="#fff" role="img" version="1.1" viewBox="0 0 36 36" xmlns="http://www.w3.org/2000/svg" data-route="MOVIES" style="color: white; fill: white;"><path d="M24.71 20.07a2.97 2.97 0 1 0-4.2-4.2 2.97 2.97 0 0 0 4.2 4.2m-12.262 0a2.97 2.97 0 1 0-4.2-4.2 2.97 2.97 0 0 0 4.2 4.2m6.173-10.31a2.969 2.969 0 1 0-4.199 4.198 2.969 2.969 0 0 0 4.199-4.198m0 12.262a2.969 2.969 0 1 0-4.199 4.198 2.969 2.969 0 0 0 4.199-4.198m-1.544-4.629a.846.846 0 1 0-1.197 1.196.846.846 0 0 0 1.197-1.196m18.06-.644c-3.33 6.913-8.165 9.928-11.635 11.24-2.57.971-4.762 1.178-5.949 1.208-.348.032-.698.053-1.052.053C10.287 29.25 5.25 24.213 5.25 18S10.287 6.75 16.5 6.75c6.214 0 11.25 5.037 11.25 11.25a11.19 11.19 0 0 1-2.493 7.054c2.832-1.612 5.844-4.382 8.138-9.143a.968.968 0 0 1 1.742.838" class="sc-kAzzGY dGwULW"></path></svg>

================
File: public/images/original-icon.svg
================
<svg alt="" aria-hidden="true" aria-label="originals" color="#fff" role="img" version="1.1" viewBox="0 0 36 36" xmlns="http://www.w3.org/2000/svg" data-route="ORIGINALS" style="color: white; fill: white;"><path d="M17.625 26.028L10.44 30l1.373-8.412L6 15.631l8.033-1.228 3.592-7.653 3.592 7.653 8.033 1.228-5.813 5.957L24.81 30z" class="sc-kAzzGY dGwULW"></path></svg>

================
File: public/images/search-icon.svg
================
<svg alt="" aria-hidden="true" aria-label="search" color="#fff" role="img" version="1.1" viewBox="0 0 36 36" xmlns="http://www.w3.org/2000/svg" data-route="SEARCH" style="color: white; fill: white;"><path d="M21.866 24.337c-3.933 2.762-9.398 2.386-12.914-1.13-3.936-3.936-3.936-10.318 0-14.255 3.937-3.936 10.32-3.936 14.256 0 3.327 3.327 3.842 8.402 1.545 12.27l4.56 4.558a2 2 0 0 1 0 2.829l-.174.173a2 2 0 0 1-2.828 0l-4.445-4.445zm-5.786-1.36a6.897 6.897 0 1 0 0-13.794 6.897 6.897 0 0 0 0 13.794z" class="sc-kAzzGY dGwULW"></path></svg>

================
File: public/images/series-icon.svg
================
<svg alt="" aria-hidden="true" aria-label="series" color="#fff" role="img" version="1.1" viewBox="0 0 36 36" xmlns="http://www.w3.org/2000/svg" data-route="SERIES" style="color: white; fill: white;"><path d="M18.84 11.965h6.722a4 4 0 0 1 4 4V26a4 4 0 0 1-4 4H10.375a4 4 0 0 1-4-4V15.965a4 4 0 0 1 4-4h6.211l-3.981-3.981a1.162 1.162 0 1 1 1.643-1.644l3.465 3.465 3.464-3.465a1.162 1.162 0 0 1 1.644 1.644l-3.982 3.981zm6.428 7.73a1.718 1.718 0 1 0 0-3.436 1.718 1.718 0 0 0 0 3.436zm0 6.011a1.718 1.718 0 1 0 0-3.435 1.718 1.718 0 0 0 0 3.435z" class="sc-kAzzGY dGwULW"></path></svg>

================
File: public/images/watchlist-icon.svg
================
<svg alt="" aria-hidden="true" aria-label="watchlist" color="#fff" role="img" version="1.1" viewBox="0 0 36 36" xmlns="http://www.w3.org/2000/svg" data-route="WATCHLIST" style="color: white; fill: white;"><path d="M27.85 15.1H20.9V8.15a2.9 2.9 0 0 0-5.8 0v6.95H8.15a2.9 2.9 0 0 0 0 5.8h6.95v6.95a2.9 2.9 0 0 0 5.8 0V20.9h6.95a2.9 2.9 0 1 0 0-5.8z" class="sc-kAzzGY dGwULW"></path></svg>

================
File: public/index.html
================
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <title>React App</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>

================
File: public/manifest.json
================
{
  "short_name": "React App",
  "name": "Create React App Sample",
  "icons": [
    {
      "src": "favicon.ico",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/x-icon"
    },
    {
      "src": "logo192.png",
      "type": "image/png",
      "sizes": "192x192"
    },
    {
      "src": "logo512.png",
      "type": "image/png",
      "sizes": "512x512"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#000000",
  "background_color": "#ffffff"
}

================
File: public/robots.txt
================
# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

================
File: README.md
================
# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in your browser.

The page will reload when you make changes.\
You may also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can't go back!**

If you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.

You don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)

================
File: requirements.txt
================
react-slick
redux
redux toolkit
firebase tool kit
slick css theme, carousel

================
File: src/App.js
================
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import Login from "./components/Login";
import Header from "./components/Header";
import Home from "./components/Home";
import Detail from "./components/Detail";
import "./App.css";

function App() {
  return (
    <div className="App">
      <Router>
        <Header />
        <Routes>
          <Route path="/" element={<Login />} />
          <Route path="/home" element={<Home />} />
          <Route path="/detail/:id" element={<Detail />} />
        </Routes>
      </Router>
    </div>
  );
}

export default App;

================
File: src/app/store.js
================
import { configureStore } from "@reduxjs/toolkit";
import userReducer from "../features/user/userSlice"; //can import with any name cause export default from userslice.js

//setting up redux store - boilerplate code
const store = configureStore({
  reducer: {
    user: userReducer, //could name user anything
  },
  middleware: (getDefaultMiddleware) =>
    getDefaultMiddleware({ serializableCheck: false }), //return
});

export default store;

================
File: src/components/Detail.js
================
import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import styled from "styled-components";
import { TOKEN, IMAGE_BASE_URL } from "../config";

const Detail = (props) => {
  const { id } = useParams();
  const [movieDetails, setMovieDetails] = useState(null);
  const [showMovie, setShowMovie] = useState(false);
  const [showTrailer, setShowTrailer] = useState(false);

  useEffect(() => {
    // Show disclaimer when component mounts
    alert(
      "Disclaimer: This website is created for educational purposes only. " +
        "All content and functionality are intended for demonstration and learning. " +
        "This is a non-profit project and not affiliated with Disney+ or any streaming service. " +
        "All movie rights belong to their respective owners."
    );
    const fetchMovieDetails = async () => {
      const url = `https://api.themoviedb.org/3/movie/${id}?append_to_response=images,videos`;
      const options = {
        method: "GET",
        headers: {
          accept: "application/json",
          Authorization: TOKEN,
        },
      };

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        const englishLogo = data.images.logos.find(
          (logo) => logo.iso_639_1 === "en"
        );

        const officialTrailer = data.videos.results.find(
          (video) => video.type === "Trailer" && video.site === "YouTube"
        );

        setMovieDetails({
          ...data,
          logoPath: englishLogo ? englishLogo.file_path : null,
          trailerKey: officialTrailer ? officialTrailer.key : null,
        });
      } catch (error) {
        console.error("Error fetching movie details:", error);
      }
    };

    fetchMovieDetails();
  }, [id]);

  return (
    <Container>
      <Background>
        <img src={`${IMAGE_BASE_URL}${movieDetails?.backdrop_path}`} alt="" />
      </Background>
      <ContentMeta>
        {movieDetails?.logoPath ? (
          <LogoImg src={`${IMAGE_BASE_URL}${movieDetails.logoPath}`} alt="" />
        ) : (
          <Title>{movieDetails?.title}</Title>
        )}
        <Description>{movieDetails?.overview}</Description>
        <Details>
          <DetailItem>
            <DetailLabel>Rating:</DetailLabel>
            {movieDetails?.vote_average?.toFixed(1)}/10
          </DetailItem>
          <DetailItem>
            <DetailLabel>Runtime:</DetailLabel>
            {movieDetails?.runtime} min
          </DetailItem>
          <DetailItem>
            <DetailLabel>Release:</DetailLabel>
            {new Date(movieDetails?.release_date).getFullYear()}
          </DetailItem>
        </Details>
        <Controls>
          <PlayButton
            onClick={() => {
              setShowMovie(true);
              setShowTrailer(false);
            }}
          >
            Watch Movie
          </PlayButton>
          <TrailerButton
            onClick={() => {
              setShowTrailer(true);
              setShowMovie(false);
            }}
          >
            Trailer
          </TrailerButton>
        </Controls>
      </ContentMeta>
      {showMovie && (
        <MovieContainer>
          <CloseButton onClick={() => setShowMovie(false)}>×</CloseButton>
          <iframe
            src={`https://moviesapi.club/movie/${id}`}
            width="100%"
            height="100%"
            allowFullScreen
            frameBorder="0"
          />
        </MovieContainer>
      )}
      {showTrailer && movieDetails?.trailerKey && (
        <MovieContainer>
          <CloseButton onClick={() => setShowTrailer(false)}>×</CloseButton>
          <iframe
            src={`https://www.youtube.com/embed/${movieDetails.trailerKey}`}
            width="100%"
            height="100%"
            allowFullScreen
            frameBorder="0"
          />
        </MovieContainer>
      )}
    </Container>
  );
};
const Container = styled.div`
  position: relative;
  min-height: calc(100vh - 250px);
  overflow-x: hidden;
  display: block;
  top: 72px;
  padding: 0 calc(3.5vw + 5px);
`;
const Background = styled.div`
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  opacity: 0.8;
  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
`;
const ContentMeta = styled.div`
  max-width: 874px;
  margin-top: 30px;
  color: white;
`;
const LogoImg = styled.img`
  max-width: 600px;
  min-height: 200px;
  width: 35vw;
  margin-bottom: 20px;
`;
const Title = styled.h1`
  font-size: 40px;
  margin-bottom: 20px;
  letter-spacing: 1px;
  font-weight: 500;
`;
const Description = styled.div`
  line-height: 1.6;
  font-size: 20px;
  margin-bottom: 24px;
  max-width: 760px;
  letter-spacing: 0.5px;
`;
const Details = styled.div`
  display: flex;
  flex-wrap: wrap;
  gap: 24px;
  margin-bottom: 24px;
  font-size: 16px;
  letter-spacing: 0.5px;
`;
const DetailItem = styled.div`
  display: flex;
  align-items: center;
  gap: 8px;
`;
const DetailLabel = styled.span`
  font-weight: 500;
  color: rgba(249, 249, 249, 0.8);
`;
const Controls = styled.div`
  display: flex;
  align-items: center;
  gap: 20px;
  margin-top: 24px;
`;
const PlayButton = styled.button`
  font-size: 15px;
  padding: 0px 24px;
  height: 56px;
  border-radius: 4px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  letter-spacing: 1.8px;
  text-transform: uppercase;
  background: rgb(249, 249, 249);
  border: none;
  color: rgb(0, 0, 0);
  transition: all 0.2s ease;
  font-weight: 500;
  &:hover {
    background: rgb(198, 198, 198);
    transform: scale(1.05);
  }
  @media (max-width: 768px) {
    height: 45px;
    padding: 0px 12px;
    font-size: 12px;
  }
`;
const TrailerButton = styled(PlayButton)`
  background: rgba(0, 0, 0, 0.3);
  border: 1px solid rgb(249, 249, 249);
  color: rgb(249, 249, 249);
  &:hover {
    background: rgba(0, 0, 0, 0.6);
  }
`;
const MovieContainer = styled.div`
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 80vw;
  height: 80vh;
  background: black;
  z-index: 1000;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 0 30px rgba(0, 0, 0, 0.7);
`;
const CloseButton = styled.button`
  position: absolute;
  right: 15px;
  top: 15px;
  width: 32px;
  height: 32px;
  background: rgba(0, 0, 0, 0.6);
  color: white;
  border: 1px solid rgba(249, 249, 249, 0.4);
  border-radius: 50%;
  cursor: pointer;
  z-index: 1001;
  font-size: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  &:hover {
    background: rgba(0, 0, 0, 0.8);
    transform: scale(1.1);
  }
`;
export default Detail;

================
File: src/components/DisneyOriginal.js
================
import styled from "styled-components";
import { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import { TOKEN, IMAGE_BASE_URL } from "../config";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import Slider from "react-slick";

const DisneyOriginal = (props) => {
  const [disMovies, setDisMovies] = useState([]);

  useEffect(() => {
    const fetchDisMovies = async () => {
      const url =
        "https://api.themoviedb.org/3/discover/movie?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc&watch_region=AU&with_companies=2&with_watch_providers=337";
      const options = {
        method: "GET",
        headers: {
          accept: "application/json",
          Authorization: TOKEN,
        },
      };

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        setDisMovies(data.results.slice(0, 15)); // Get 15 movies for sliding
      } catch (error) {
        console.error("Error fetching Disney movies");
      }
    };

    fetchDisMovies();
  }, []);

  const settings = {
    dots: true,
    infinite: false,
    speed: 500,
    slidesToShow: 4,
    slidesToScroll: 1,
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 1,
        },
      },
      {
        breakpoint: 768,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 1,
        },
      },
    ],
  };

  return (
    <Container>
      <h4>Disney Specials</h4>
      <StyledSlider {...settings}>
        {disMovies.map((movie) => (
          <Wrap key={movie.id}>
            <Link to={`/detail/${movie.id}`}>
              <img
                src={`${IMAGE_BASE_URL}${movie.poster_path}`}
                alt={movie.title}
              />
            </Link>
          </Wrap>
        ))}
      </StyledSlider>
    </Container>
  );
};

const Container = styled.div`
  padding: 0 0 26px;
`;

const StyledSlider = styled(Slider)`
  .slick-list {
    overflow: visible;
  }

  .slick-slide > div {
    margin: 0 10px;
  }

  .slick-prev,
  .slick-next {
    z-index: 10;
    width: 44px;
    height: 44px;
    &:before {
      font-size: 24px;
    }
  }

  .slick-prev {
    left: -50px;
  }

  .slick-next {
    right: -50px;
  }
`;

const Wrap = styled.div`
  padding-top: 150%;
  border-radius: 10px;
  box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,
    rgb(0 0 0 / 73%) 0px 16px 10px -10px;
  cursor: pointer;
  overflow: hidden;
  position: relative;
  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;
  border: 3px solid rgba(249, 249, 249, 0.1);

  img {
    inset: 0px;
    display: block;
    height: 100%;
    object-fit: cover;
    opacity: 1;
    position: absolute;
    transition: opacity 500ms ease-in-out 0s;
    width: 100%;
    z-index: 1;
    top: 0;
  }

  &:hover {
    box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,
      rgb(0 0 0 / 72%) 0px 30px 22px -10px;
    transform: scale(1.05);
    border-color: rgba(249, 249, 249, 0.8);
  }
`;

export default DisneyOriginal;

================
File: src/components/Header.js
================
import styled from "styled-components";
import { auth, provider } from "../firebase";
import { signInWithPopup } from "firebase/auth";
//dispatch action to our store, selector retrieve stuff from store
import { useDispatch, useSelector } from "react-redux";
import { useNavigate } from "react-router-dom";
import { useEffect } from "react";
import Search from "./Search";
//selector we created need import from userSlice
import {
  selectUserName,
  selectUserEmail,
  selectUserPhoto,
  setUserLoginDetails,
  setSignOutState,
} from "../features/user/userSlice";

const Header = (props) => {
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const userName = useSelector(selectUserName);
  const userPhoto = useSelector(selectUserPhoto);
  const userEmail = useSelector(selectUserEmail);

  //react hook useeffect
  //useEffect is like setting up an automatic watcher that runs code:
  //When the component first appears (mounts)
  //When specific things (dependencies) change
  useEffect(() => {
    //listener on auth state change - firebase built in
    auth.onAuthStateChanged(async (user) => {
      //user arg is provided by firebase when we log in with the response user object
      if (user) {
        //if user null -> not redirect
        setUser(user); //needed for continous auth state monitoring when user change

        navigate("/home");
      }
    });
  }, [userName]); //this function only runs when variable username is updated

  //Handle authentication
  const handleAuth = async () => {
    if (!userName) {
      //pop up sign in
      try {
        const result = await signInWithPopup(auth, provider);
        console.log(result);
        setUser(result.user);
      } catch (error) {
        alert(error.message);
      }
    } else if (userName) {
      // Sign Out logic
      try {
        await auth.signOut(); // Firebase sign out
        dispatch(setSignOutState()); // Reset Redux state
        navigate("/"); // Go back to login page
      } catch (error) {
        alert(error.message);
      }
    }
  };

  //setUser function
  //take in user, and dispatch user login details
  const setUser = (user) => {
    console.log("Setting user with photo:", user.photoURL); // Debug
    dispatch(
      //all of props coming from the response/result can be viewed in console
      //dispatch to rediux store
      setUserLoginDetails({
        name: user.displayName,
        email: user.email,
        photo: user.photoURL,
      })
    );
  };
  return (
    <Nav>
      <Logo>
        <img src="/images/logo.svg" alt=""></img>
      </Logo>
      {
        //conditional redenring logged in
        !userName ? (
          <Login onClick={handleAuth}>Login</Login>
        ) : (
          <>
            <NavMenu>
              <a href="/home">
                <img src="/images/home-icon.svg" alt="home" />
                <span>HOME</span>
              </a>

              <Search />

              <a href="/originals">
                <img src="/images/original-icon.svg" alt="originals" />
                <span>ORIGINALS</span>
              </a>

              <a href="/series">
                <img src="/images/series-icon.svg" alt="series" />
                <span>SERIES</span>
              </a>

              <a href="/movies">
                <img src="/images/movie-icon.svg" alt="movies" />
                <span>MOVIES</span>
              </a>

              <a href="/watchlist">
                <img src="/images/watchlist-icon.svg" alt="watchlist" />
                <span>WATCHLIST</span>
              </a>
            </NavMenu>
            <SignOut>
              <UserImg src={userPhoto} alt={userEmail} />
              <DropDown>
                <span onClick={handleAuth}> Sign Out</span>
              </DropDown>
            </SignOut>
          </>
        )
      }
    </Nav>
  );
};

const Nav = styled.nav`
  position: fixed; //stay
  top: 0;
  left: 0;
  right: 0;
  height: 70px;
  background-color: #090b13;
  display: flex;
  justify-content: space-between; //2 items has space between
  align-items: center; //center verti
  padding: 0 36px;
  letter-spacing: 16px;
  z-index: 3;
`;

const Logo = styled.a`
  width: 80px; //no need height image scale proportionally
  padding: 0;
  margin-top: 4px;
  max-height: 70px;
  font-size: 0;
  display: inline-block;
  img {
    display: block;
    width: 100%;
  }
`;

const NavMenu = styled.div`
  align-items: center;
  display: flex;
  flex-flow: row nowrap; //items in a single row
  height: 100;
  justify-content: flex-end;
  margin: 0px;
  padding: 0px;
  position: relative;
  margin-right: auto; //move to right close to logo
  margin-left: 25px; //distance from logo
  > * {
    display: flex;
    align-items: center;
  }
  a {
    display: flex;
    align-items: center;
    padding: 0 12px;

    img {
      //show the img with height
      height: 20px;
      min-width: 20px;
      width: 20px;
      z-index: auto;
      margin-right: 5px;
    }

    span {
      color: rgb(249, 249, 249);
      font-size: 13px;
      letter-spacing: 1.42px;
      line-height: 1.08;
      padding: 2px 0px;
      white-space: nowrap; //text content stay on one line
      position: relative;
      margin-top: 2px;

      //underline animation
      //position needs to be absolute
      &:before {
        //pseudo element creates before the span text
        //creates invisible line under text
        background-color: rgb(249, 249, 249);
        border-radius: 0px 0px 4px 4px;
        bottom: -6px; //6px below the text
        content: ""; //need for the pseudo element
        height: 2px; //line thickness
        left: 0px;
        opacity: 1;
        position: absolute;
        right: 0px; //mean stick to the right edge of parent
        transform-origin: left center; //starting point on the left
        transform: scaleX(0); //shrinks width to 0
        transition: transform 0.3s ease-out; //smooth change
        width: auto;
      }
    }

    &:hover {
      span:before {
        transform: scaleX(1); //100% width
      }
    }
  }

  @media only screen and (max-width: 768px) {
    display: none; //small screen no show
  }
`;

const Login = styled.a`
  background-color: black;
  padding: 8px 16px;
  text-transform: uppercase;
  letter-spacing: 1.5px;
  border: 1px solid white;
  border-radius: 5px;
  transition: all 0.2s ease-out;

  &:hover {
    background-color: white;
    color: black;
    cursor: pointer;
  }
`;

const UserImg = styled.img`
  height: 40px;
  width: 40px;
  border-radius: 50%;
  cursor: pointer;
  object-fit: cover; // Ensure image covers circle proper -> no stretch
  border: 2px solid transparent; // For hover effect, invisible border
  transition: all 0.3s ease; //all changes smooth
`;

const DropDown = styled.div`
  position: absolute; // Position relative to SignOut div
  top: 50px; // 50px down from top of SignOut
  right: 0; // Align to right edge
  background: rgb(19, 19, 19);
  border: 1px solid rgba(151, 151, 151, 0.34);
  border-radius: 4px;
  padding: 10px;
  font-size: 13px;
  letter-spacing: 1.5px;
  width: 110px; //width of dropdown
  opacity: 0; // Hidden by default
  visibility: hidden; // Better than just opacity for accessibility
  transform: translateY(-20px); // Slight upward shift for animation
  transition: all 0.3s ease; // Smooth transition for all properties

  span {
    display: block;
    width: 100%;
    padding: 5px 10px;
    color: #fff;
    cursor: pointer;

    &:hover {
      background-color: rgba(255, 255, 255, 0.1); // Subtle hover effect
      border-radius: 2px;
    }
  }

  // Triangle pointer at top
  &:before {
    content: "";
    position: absolute;
    top: -10px; // Position above dropdown
    right: 10px; // Align with user image
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 0 10px 10px 10px;
    border-color: transparent transparent rgb(19, 19, 19) transparent;
  }
`;

const SignOut = styled.div`
  position: relative;
  height: 48px;
  width: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;

  // UserImg styling moved inside
  img {
    // Instead of separate UserImg component
    height: 40px;
    width: 40px;
    border-radius: 50%;
    cursor: pointer;
    object-fit: cover;
    border: 2px solid transparent;
    transition: all 0.3s ease;
  }

  // Hover effects
  &:hover {
    img {
      // Changed from ${UserImg} to img
      border-color: rgba(255, 255, 255, 0.8);
      transform: scale(1.05);
    }

    ${DropDown} {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
    }
  }
`;

export default Header;

================
File: src/components/Home.js
================
import styled from "styled-components";
import ImageSlider from "./ImageSlider";
import Viewers from "./Viewers";
import Rec from "./Rec";
import DisneyOriginal from "./DisneyOriginal";
import NewRelease from "./NewRelease";
import Trending from "./Trending";

const Home = (props) => {
  return (
    <Container>
      <ImageSlider />
      <Viewers />
      <Rec />
      <Trending />
      <DisneyOriginal />
      <NewRelease />
    </Container>
  );
};

const Container = styled.main`
  // Basic container setup
  position: relative; // Makes container a reference point for absolute positioning
  min-height: calc(100vh - 70px); // Full screen height minus navbar height
  overflow-x: hidden; // Hide horizontal scrollbar
  overflow-y: hidden;
  display: block; // Takes full width
  top: 72px; // Push content below navbar
  padding: 0 calc(3.5vw + 5px); // Space on left and right sides

  // Background setup using &:after
  &:after {
    // Creates a new element after the container
    // Background image settings
    background: url("/images/home-background.png") center center / cover
      // Center image and make it cover whole area
      no-repeat fixed; // Don't repeat image and keep it fixed while scrolling

    content: ""; // Required for :after to work
    position: absolute; // Position relative to container
    inset: 0px; // Stretch to all edges (top, right, bottom, left = 0)
    opacity: 1; // Full visibility
    z-index: -1; // Put behind other content
  }
`;

/* 
Container is like a box that:
Is as tall as the screen minus navbar
Has some padding on sides
Sits below navbar
Background is like a layer that:
Sits behind everything
Covers the whole container
Shows an image that doesn't move when scrolling
*/

export default Home;

================
File: src/components/ImageSlider.js
================
import styled from "styled-components";
import { useEffect, useState } from "react";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import Slider from "react-slick";
import { TOKEN, IMAGE_BASE_URL } from "../config";
import { Link } from "react-router-dom"; //click link and react no refresh

const ImageSlider = (props) => {
  //react state for movies
  const [sliderMovies, setSliderMovies] = useState([]); //array of movies on the slider object
  useEffect(() => {
    const fetchSliderMovies = async () => {
      //set up api token and url
      const url =
        "https://api.themoviedb.org/3/discover/movie?include_adult=false&include_video=false&language=en-US&page=1&sort_by=revenue.desc&watch_region=AU&with_watch_providers=337";
      const options = {
        method: "GET",
        headers: {
          accept: "application/json",
          Authorization: TOKEN,
        },
      };

      //interact api
      try {
        const response = await fetch(url, options);
        const data = await response.json();
        setSliderMovies(data.results.slice(0, 7)); //get first 4 movies for slider
      } catch (error) {
        console.error("Error fetching slider movies");
      }
    };

    //call fetch slider func
    fetchSliderMovies();
  }, []);

  //slick carousel slider settings api - check documentation for specific styling
  const settings = {
    dots: true,
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1,
    infinite: true,
    autoplay: true,
  };
  return (
    <Carousel {...settings}>
      {sliderMovies.map(
        (
          movie //auutomatic return Wrap element no need return key w
        ) => (
          <Wrap key={movie.id}>
            <ImageContainer>
              <Link to={`/detail/${movie.id}`} key={movie.id}>
                <img
                  src={`${IMAGE_BASE_URL}${movie.backdrop_path}`} //template literal
                  alt={movie.title}
                />
              </Link>
            </ImageContainer>
          </Wrap>
        )
      )}
    </Carousel>
  );
};

//ccreating carousel comp from slider comp
const Carousel = styled(Slider)`
  margin-top: 20px;
  max-width: 1080px;
  margin-left: auto;
  margin-right: auto;

  & > button {
    opacity: 0;
    height: 100%;
    width: 5vw;
    z-index: 1;

    &:hover {
      opacity: 1;
      transition: opacity 0.2s ease 0s;
    }
  }

  ul li button {
    &:before {
      font-size: 10px;
      color: rgb(150, 158, 171);
    }
  }

  li.slick-active button:before {
    color: white;
  }

  .slick-list {
    overflow: visible;
  }

  .slick-prev {
    left: -400px;
    &:before {
      font-size: 50px; // Make arrows more visible
    }
  }

  .slick-next {
    right: -400px;
    &:before {
      font-size: 50px; // Make arrows more visible
    }
  }
`;

const Wrap = styled.div`
  border-radius: 4px;
  cursor: pointer;
  position: relative;
  padding-top: 56.25%; // Creates 16:9 aspect ratio
`;

const ImageContainer = styled.div`
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 4px;
  box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,
    rgb(0 0 0 / 73%) 0px 16px 10px -10px;
  cursor: pointer;
  padding: 4px;

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 4px;
  }

  &:hover {
    padding: 0;
    border: 4px solid rgba(249, 249, 249, 0.8);
    transition-duration: 50ms;
  }
`;

export default ImageSlider;

================
File: src/components/Login.js
================
import styled from "styled-components";

const Login = (props) => {
  return (
    <Container>
      <Content>
        <CTA>
          <CTALogoOne src="/images/cta-logo-one.svg" />
          <SignUp>GET ALL THERE</SignUp>
          <Description>
            Explore thousands of TV series, movies & originals, in stunning 4K
          </Description>
          <CTALogoTwo src="/images/logo-2.png" />
        </CTA>
        <BGIMG></BGIMG>
      </Content>
    </Container>
  );
};

const Container = styled.section`
  overflow: hidden;
  display: flex;
  flex-direction: column;
  text-align: center;
  height: 100vh;
`;

const Content = styled.div`
  margin-bottom: 10vw;
  width: 100%;
  height: 100%;
  position: relative;
  min-height: 100vh;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  padding: 80px 40px;
`;

const BGIMG = styled.div`
  height: 100%;
  background-image: url("/images/login-background.jpg");
  background-position: center;
  background-size: cover;
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  z-index: -1;
  animation: kenBurns 20s infinite ease-in-out;

  @keyframes kenBurns {
    //start of animation
    0% {
      transform: scale(1) translate(0);
    }
    //halfway point
    50% {
      //zoom in 10% + move left and up
      transform: scale(1.1) translate(-1%, -1%);
    }
    //end animation
    100% {
      transform: scale(1) translate(0);
    }
  }
`;

const CTA = styled.div`
  max-width: 650px;
  display: flex;
  flex-direction: column;
  width: 100%;
  align-items: center;
`;

const CTALogoOne = styled.img`
  margin-bottom: 12px;
  max-width: 600px;
  min-height: 1px;
  display: block;
  width: 100%;
`;

const CTALogoTwo = styled.img`
  margin-bottom: 20px;
  max-width: 600px;
  display: inline-block;
  width: 100%;
`;

const SignUp = styled.a`
  font-weight: bold;
  color: #f9f9f9;
  background-color: #0063e5;
  margin-bottom: 12px;
  width: 100%;
  letter-spacing: 1.5px;
  font-size: 18px;
  padding: 16.5px 0;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.3s ease-out;
  &:hover {
    background-color: #0483ee;
    letter-spacing: 2.5px;
    filter: brightness(1.1);
  }
`;

const Description = styled.p`
  color: hsla(0, 0%, 95.3%, 1);
  font-size: 14px;
  margin: 0 0 24px;
  line-height: 1.5;
  letter-spacing: 1.5px;
`;
export default Login;

================
File: src/components/NewRelease.js
================
import styled from "styled-components";
import { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import { TOKEN, IMAGE_BASE_URL } from "../config";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import Slider from "react-slick";

const NewRelease = (props) => {
  const [newMovies, setNewMovies] = useState([]);

  useEffect(() => {
    const fetchNewMovies = async () => {
      const today = new Date().toISOString().split("T")[0];
      const threeMonthsAgo = new Date();
      threeMonthsAgo.setMonth(threeMonthsAgo.getMonth() - 3);
      const startDate = threeMonthsAgo.toISOString().split("T")[0];

      const url =
        `https://api.themoviedb.org/3/discover/movie?` +
        `include_adult=false` +
        `&include_video=false` +
        `&language=en-US` +
        `&page=1` +
        `&sort_by=release_date.desc` +
        `&with_watch_providers=337` +
        `&watch_region=AU` +
        `&release_date.lte=${today}` +
        `&release_date.gte=${startDate}`;

      const options = {
        method: "GET",
        headers: {
          accept: "application/json",
          Authorization: TOKEN,
        },
      };

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        setNewMovies(data.results.slice(0, 15)); // Get 15 movies for sliding
      } catch (error) {
        console.error("Error fetching new movies");
      }
    };

    fetchNewMovies();
  }, []);

  const settings = {
    dots: true,
    infinite: false,
    speed: 500,
    slidesToShow: 4,
    slidesToScroll: 1,
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 1,
        },
      },
      {
        breakpoint: 768,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 1,
        },
      },
    ],
  };

  return (
    <Container>
      <h4>New Releases</h4>
      <StyledSlider {...settings}>
        {newMovies.map((movie) => (
          <Wrap key={movie.id}>
            <Link to={`/detail/${movie.id}`}>
              <img
                src={`${IMAGE_BASE_URL}${movie.poster_path}`}
                alt={movie.title}
              />
            </Link>
          </Wrap>
        ))}
      </StyledSlider>
    </Container>
  );
};

const Container = styled.div`
  padding: 0 0 26px;
`;

const StyledSlider = styled(Slider)`
  .slick-list {
    overflow: visible;
  }

  .slick-slide > div {
    margin: 0 10px;
  }

  .slick-prev,
  .slick-next {
    z-index: 10;
    width: 44px;
    height: 44px;
    &:before {
      font-size: 24px;
    }
  }

  .slick-prev {
    left: -50px;
  }

  .slick-next {
    right: -50px;
  }
`;

const Wrap = styled.div`
  padding-top: 150%;
  border-radius: 10px;
  box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,
    rgb(0 0 0 / 73%) 0px 16px 10px -10px;
  cursor: pointer;
  overflow: hidden;
  position: relative;
  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;
  border: 3px solid rgba(249, 249, 249, 0.1);

  img {
    inset: 0px;
    display: block;
    height: 100%;
    object-fit: cover;
    opacity: 1;
    position: absolute;
    transition: opacity 500ms ease-in-out 0s;
    width: 100%;
    z-index: 1;
    top: 0;
  }

  &:hover {
    box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,
      rgb(0 0 0 / 72%) 0px 30px 22px -10px;
    transform: scale(1.05);
    border-color: rgba(249, 249, 249, 0.8);
  }
`;

export default NewRelease;

================
File: src/components/Rec.js
================
import styled from "styled-components";
import { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import { TOKEN, IMAGE_BASE_URL } from "../config";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import Slider from "react-slick";

const Rec = (props) => {
  const [recMovies, setRecMovies] = useState([]);

  useEffect(() => {
    const fetchRecMovies = async () => {
      const url =
        "https://api.themoviedb.org/3/discover/movie?include_adult=false&include_video=false&language=en-US&page=1&sort_by=vote_count.desc&watch_region=AU&with_watch_providers=337";
      const options = {
        method: "GET",
        headers: {
          accept: "application/json",
          Authorization: TOKEN,
        },
      };

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        setRecMovies(data.results.slice(0, 15)); // Get 15 movies for sliding
      } catch (error) {
        console.error("Error fetching recommended movies");
      }
    };

    fetchRecMovies();
  }, []);

  const settings = {
    dots: true,
    infinite: false,
    speed: 500,
    slidesToShow: 4,
    slidesToScroll: 1,
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 1,
        },
      },
      {
        breakpoint: 768,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 1,
        },
      },
    ],
  };

  return (
    <Container>
      <h4>Recommended for you</h4>
      <StyledSlider {...settings}>
        {recMovies.map((movie) => (
          <Wrap key={movie.id}>
            <Link to={`/detail/${movie.id}`}>
              <img
                src={`${IMAGE_BASE_URL}${movie.poster_path}`}
                alt={movie.title}
              />
            </Link>
          </Wrap>
        ))}
      </StyledSlider>
    </Container>
  );
};

const Container = styled.div`
  padding: 0 0 26px;
`;

const StyledSlider = styled(Slider)`
  .slick-list {
    overflow: visible;
  }

  .slick-slide > div {
    margin: 0 10px;
  }

  .slick-prev,
  .slick-next {
    z-index: 10;
    width: 44px;
    height: 44px;
    &:before {
      font-size: 24px;
    }
  }

  .slick-prev {
    left: -50px;
  }

  .slick-next {
    right: -50px;
  }
`;

const Wrap = styled.div`
  padding-top: 150%;
  border-radius: 10px;
  box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,
    rgb(0 0 0 / 73%) 0px 16px 10px -10px;
  cursor: pointer;
  overflow: hidden;
  position: relative;
  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;
  border: 3px solid rgba(249, 249, 249, 0.1);

  img {
    inset: 0px;
    display: block;
    height: 100%;
    object-fit: cover;
    opacity: 1;
    position: absolute;
    transition: opacity 500ms ease-in-out 0s;
    width: 100%;
    z-index: 1;
    top: 0;
  }

  &:hover {
    box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,
      rgb(0 0 0 / 72%) 0px 30px 22px -10px;
    transform: scale(1.05);
    border-color: rgba(249, 249, 249, 0.8);
  }
`;

export default Rec;

================
File: src/components/Search.js
================
import React, { useState, useEffect, useRef } from "react";
import styled from "styled-components";
import { Link } from "react-router-dom";
import { TOKEN, IMAGE_BASE_URL } from "../config";

const Search = () => {
  const [searchTerm, setSearchTerm] = useState("");
  const [searchResults, setSearchResults] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const searchRef = useRef(null);

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (searchRef.current && !searchRef.current.contains(event.target)) {
        setSearchResults([]);
      }
    };

    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);

  useEffect(() => {
    const delayDebounceFn = setTimeout(() => {
      if (searchTerm) {
        fetchSearchResults();
      } else {
        setSearchResults([]);
      }
    }, 300);

    return () => clearTimeout(delayDebounceFn);
  }, [searchTerm]);

  const fetchSearchResults = async () => {
    setIsLoading(true);
    try {
      const url = `https://api.themoviedb.org/3/search/movie?include_adult=false&query=${searchTerm}&language=en-US&page=1&with_watch_providers=337&watch_region=AU`;
      const options = {
        method: "GET",
        headers: {
          accept: "application/json",
          Authorization: TOKEN,
        },
      };

      const response = await fetch(url, options);
      const data = await response.json();
      setSearchResults(data.results.slice(0, 5));
    } catch (error) {
      console.error("Error fetching search results:", error);
    }
    setIsLoading(false);
  };

  return (
    <SearchContainer ref={searchRef}>
      <SearchInput
        type="text"
        placeholder="Search for movies..."
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
      />
      {searchResults.length > 0 && (
        <ResultsDropdown>
          {searchResults.map((movie) => (
            <ResultItem key={movie.id}>
              <Link to={`/detail/${movie.id}`}>
                <MoviePoster>
                  <img
                    src={`${IMAGE_BASE_URL}${movie.poster_path}`}
                    alt={movie.title}
                  />
                </MoviePoster>
                <MovieInfo>
                  <MovieTitle>{movie.title}</MovieTitle>
                  <MovieYear>
                    {movie.release_date?.split("-")[0] || "N/A"}
                  </MovieYear>
                </MovieInfo>
              </Link>
            </ResultItem>
          ))}
        </ResultsDropdown>
      )}
    </SearchContainer>
  );
};

const SearchContainer = styled.div`
  position: relative;
  width: 300px;
  margin: 0 20px;
`;

const SearchInput = styled.input`
  width: 100%;
  padding: 8px 16px;
  border: none;
  border-radius: 4px;
  background-color: rgba(255, 255, 255, 0.1);
  color: white;
  font-size: 14px;
  transition: all 0.3s ease;

  &:focus {
    outline: none;
    background-color: rgba(255, 255, 255, 0.2);
    box-shadow: 0 0 0 2px rgba(249, 249, 249, 0.2);
  }

  &::placeholder {
    color: rgba(249, 249, 249, 0.5);
  }
`;

const ResultsDropdown = styled.div`
  position: absolute;
  top: calc(100% + 8px);
  left: 0;
  right: 0;
  background-color: #2c2c2c;
  border-radius: 4px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);
  overflow: hidden;
  z-index: 1000;
`;

const ResultItem = styled.div`
  a {
    display: flex;
    align-items: center;
    padding: 12px;
    text-decoration: none;
    transition: background-color 0.2s ease;

    &:hover {
      background-color: rgba(249, 249, 249, 0.1);
    }
  }
`;

const MoviePoster = styled.div`
  width: 40px;
  height: 60px;
  border-radius: 2px;
  overflow: hidden;
  margin-right: 12px;
  flex-shrink: 0;

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
`;

const MovieInfo = styled.div`
  flex-grow: 1;
  display: flex;
  flex-direction: column;
`;

const MovieTitle = styled.div`
  color: white;
  font-size: 14px;
  font-weight: 500;
  margin-bottom: 4px;
  letter-spacing: 0.5px;
`;

const MovieYear = styled.div`
  color: rgba(249, 249, 249, 0.6);
  font-size: 12px;
  letter-spacing: 0.5px;
`;

export default Search;

================
File: src/components/Trending.js
================
import styled from "styled-components";
import { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import { TOKEN, IMAGE_BASE_URL } from "../config";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import Slider from "react-slick";

const Trending = (props) => {
  const [trendMovies, setTrendMovies] = useState([]);

  useEffect(() => {
    const fetchTrendMovies = async () => {
      const url =
        "https://api.themoviedb.org/3/discover/movie?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc&watch_region=AU&with_watch_providers=337";
      const options = {
        method: "GET",
        headers: {
          accept: "application/json",
          Authorization: TOKEN,
        },
      };

      try {
        const response = await fetch(url, options);
        const data = await response.json();
        setTrendMovies(data.results.slice(0, 15)); // Get 10 movies for sliding
      } catch (error) {
        console.error("Error fetching trending movies");
      }
    };

    fetchTrendMovies();
  }, []);

  const settings = {
    dots: true,
    infinite: false,
    speed: 500,
    slidesToShow: 4,
    slidesToScroll: 1,
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 1,
        },
      },
      {
        breakpoint: 768,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 1,
        },
      },
    ],
  };

  return (
    <Container>
      <h4>Trending</h4>
      <StyledSlider {...settings}>
        {trendMovies.map((movie) => (
          <Wrap key={movie.id}>
            <Link to={`/detail/${movie.id}`}>
              <img
                src={`${IMAGE_BASE_URL}${movie.poster_path}`}
                alt={movie.title}
              />
            </Link>
          </Wrap>
        ))}
      </StyledSlider>
    </Container>
  );
};

const Container = styled.div`
  padding: 0 0 26px;
`;

const StyledSlider = styled(Slider)`
  .slick-list {
    overflow: visible;
  }

  .slick-slide > div {
    margin: 0 10px;
  }

  .slick-prev,
  .slick-next {
    z-index: 10;
    width: 44px;
    height: 44px;
    &:before {
      font-size: 24px;
    }
  }

  .slick-prev {
    left: -50px;
  }

  .slick-next {
    right: -50px;
  }
`;

const Wrap = styled.div`
  padding-top: 150%;
  border-radius: 10px;
  box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,
    rgb(0 0 0 / 73%) 0px 16px 10px -10px;
  cursor: pointer;
  overflow: hidden;
  position: relative;
  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;
  border: 3px solid rgba(249, 249, 249, 0.1);

  img {
    inset: 0px;
    display: block;
    height: 100%;
    object-fit: cover;
    opacity: 1;
    position: absolute;
    transition: opacity 500ms ease-in-out 0s;
    width: 100%;
    z-index: 1;
    top: 0;
  }

  &:hover {
    box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,
      rgb(0 0 0 / 72%) 0px 30px 22px -10px;
    transform: scale(1.05);
    border-color: rgba(249, 249, 249, 0.8);
  }
`;

export default Trending;

================
File: src/components/Viewers.js
================
import styled from "styled-components";
const Viewers = (props) => {
  return (
    <Container>
      <Wrap>
        <img src="/images/viewers-disney.png" alt="" />
        <video autoPlay={true} loop={true} playsInline={true}>
          <source src="/videos/disney.mp4" type="video/mp4" />
        </video>
      </Wrap>
      <Wrap>
        <img src="/images/viewers-marvel.png" alt="" />
        <video autoPlay={true} loop={true} playsInline={true}>
          <source src="/videos/marvel.mp4" type="video/mp4" />
        </video>
      </Wrap>
      <Wrap>
        <img src="/images/viewers-national.png" alt="" />
        <video autoPlay={true} loop={true} playsInline={true}>
          <source src="/videos/na.mp4" type="video/mp4" />
        </video>
      </Wrap>
      <Wrap>
        <img src="/images/viewers-starwars.png" alt="" />
        <video autoPlay={true} loop={true} playsInline={true}>
          <source src="/videos/star.mp4" type="video/mp4" />
        </video>
      </Wrap>
      <Wrap>
        <img src="/images/viewers-pixar.png" alt="" />
        <video autoPlay={true} loop={true} playsInline={true}>
          <source src="/videos/pixar.mp4" type="video/mp4" />
        </video>
      </Wrap>
    </Container>
  );
};

const Container = styled.div`
  margin-top: 30px;
  padding: 30px 0px 26px;
  display: grid;
  grid-gap: 25px;
  gap: 25px;
  grid-template-columns: repeat(5, minmax(0, 1fr));

  @media (max-width: 768px) {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
`;

const Wrap = styled.div`
  padding-top: 56.25%;
  border-radius: 10px;
  box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,
    rgb(0 0 0 / 73%) 0px 16px 10px -10px;

  cursor: pointer;
  overflow: hidden;
  position: relative;
  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;
  border: 3px solid rgba(249, 249, 249, 0.1);

  /*Positioning Context
position: relative on the parent
position: absolute with inset: 0px on the child
This combination makes the image fill the entire parent container */
  img {
    inset: 0px;
    display: block;
    height: 100%;
    width: 100%;
    object-fit: cover;
    opacity: 1;
    position: absolute;
    transition: opacity 500ms ease-in-out 0s;
    z-index: 1;
  }

  video {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0px;
    opacity: 0; //invisible until hover
    z-index: 0;
  }

  &:hover {
    box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,
      rgb(0 0 0 / 72%) 0px 30px 22px -10px;

    transform: scale(1.05);
    border-color: rgba(249, 249, 249, 0.8);
    video {
      opacity: 1;
    }
  }
`;
export default Viewers;

================
File: src/config.js
================
export const TOKEN =
  "Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmMzUwODRjYjRkYTZjZjBlY2Q2Zjc3ZGQ4ZTIwMzIyZSIsIm5iZiI6MTczMTY1NTI4Mi42MjIzODcsInN1YiI6IjY2MmYzZWE2MDI4ZjE0MDEyMjY5MzFmZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.y4s5PBsGbsIqTuCW3pCzZgXj7m5WzbeUWMIgSPbgQic";

export const IMAGE_BASE_URL = "https://image.tmdb.org/t/p/original";

================
File: src/features/user/userSlice.js
================
import { createSlice } from "@reduxjs/toolkit";

// 1. Initial State Definition
const initialState = {
  name: null, // Empty string as default value
  email: null, // These property names can be anything you choose
  photo: null, // They're just defining the structure of your user state
};

// 2. Slice Creation
const userSlice = createSlice({
  name: "user", // Name of this slice in Redux store, used for debug
  initialState, // Default state defined above
  reducers: {
    // Functions to update state
    //needs state and action because we receiving data
    setUserLoginDetails: (state, action) => {
      // state = current state
      // action.payload = data you send when dispatching
      state.name = action.payload.name; // Update state with new values
      state.email = action.payload.email; // These property names MUST match
      state.photo = action.payload.photo; // what you send in payload
    },

    //only need state because we only reset data
    setSignOutState: (state) => {
      state.name = null;
      state.email = null;
      state.photo = null;
    },
  },
});

//The property names (name, email, photo) in initialState define the structure of your state
//state = current values in Redux store
// action = package of new data being sent
//action.payload = the actual data inside the package

// 1. Export actions for dispatching - the controls
export const { setUserLoginDetails, setSignOutState } = userSlice.actions;

// 2. Export selectors for accessing state 0 the display
export const selectUserName = (state) => state.user?.name;
export const selectUserEmail = (state) => state.user?.email;
export const selectUserPhoto = (state) => state.user?.photo;

// 3. Export reducer for store setup (REQUIRED), required for redux to work - the engine
export default userSlice.reducer;

================
File: src/firebase.js
================
// Import the functions you need from the SDKs
import { initializeApp } from "firebase/app";
import { getFirestore } from "firebase/firestore";
import { getAuth, GoogleAuthProvider } from "firebase/auth";
import { getStorage } from "firebase/storage";

// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
  apiKey: "AIzaSyAzduBY-CHGr3pJfD5CXjyc0NweDJuO6lM",
  authDomain: "disney-clone-stream.firebaseapp.com",
  projectId: "disney-clone-stream",
  storageBucket: "disney-clone-stream.firebasestorage.app",
  messagingSenderId: "726512602072",
  appId: "1:726512602072:web:0b359f086d12922a2e00ad",
  measurementId: "G-4HLFYSC32K",
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);

// Initialize services
const db = getFirestore(app);
const auth = getAuth(app);
const provider = new GoogleAuthProvider();
const storage = getStorage(app);

// Export services
export { auth, provider, storage };
export default db;

================
File: src/index.css
================
html {
  scroll-behavior: smooth;
}

* {
  box-sizing: border-box;
}

body {
  background-color: #040714;
  color: #f9f9f9;
  font-family: Avenir-Roman, sans-serif;
  margin: 0;
  padding: 0;
}

/*Link styling*/
a {
  color: #f9f9f9;
  text-decoration: none; /*no underline*/
}

/*Mobile media + desktop query*/
@media only screen and (min-width: 768px) {
  body {
    font-size: 16px;
  }
}

@media only screen and (min-width: 480px) {
  body {
    font-size: 15px;
  }
}

@media only screen and (min-width: 479px) {
  body {
    font-size: 14px;
  }
}

================
File: src/index.js
================
import React from "react";
import ReactDOM from "react-dom/client";
import { Provider } from "react-redux";
import "./index.css";
import App from "./App";
import store from "./app/store";

const root = ReactDOM.createRoot(document.getElementById("root"));
root.render(
  <React.StrictMode>
    {/* Wrap app around created store */}
    <Provider store={store}>
      <App />
    </Provider>
  </React.StrictMode>
);
